# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = pyaleph
description = Reference implementation of Aleph.im next generation network of decentralized big data applications.
author = Moshe Malawach
author-email = moshe.malawach@protonmail.com
license = mit
url = https://aleph.im
long-description = file: README.rst
long-description-content-type = text/markdown
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python

[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =src
# DON'T CHANGE THE FOLLOWING LINE! IT WILL BE UPDATED BY PYSCAFFOLD!
setup_requires =
      pyscaffold>=3.1a0,<3.2a0
      pytest-runner>=2.0,<3dev
# Add here dependencies of your project (semicolon/line-separated), e.g.
install_requires =
      pymongo
      motor>=2.0
      aiocache
      aioipfs>=0.4.7
      aiohttp>=3.3.2,<4.0.0a1
      aiohttp-session[secure]
      aiohttp-jinja2
      aiohttp_cors
      configparser
      configmanager
      uvloop
      web3
      eth_account
      hexbytes
      secp256k1
      coincurve>=13.0.0
      libp2p
      python-rocksdb
      pytz
      python-dateutil
      pyyaml
      python-socketio
      substrate-interface
      cosmospy
      requests>=2.24.0
      urllib3>=1.25.10
      aleph-client @ git+https://github.com/aleph-im/aleph-client.git@0.1.1
      setproctitle>=1.2.1
      sentry-sdk>=0.19.4

dependency_links =
    https://github.com/aleph-im/py-libp2p/tarball/master#egg=libp2p
    git+https://github.com/aleph-im/nuls2-python.git@master

# The usage of test_requires is discouraged, see `Dependency Management` docs
# tests_require = pytest; pytest-cov
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
# python_requires = >=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install pyaleph[PDF]` like:
# PDF = ReportLab; RXP
# Add here test requirements (semicolon/line-separated)
testing =
    pytest
    pytest-cov
    pytest-mock
    pytest-asyncio
bnb =
    python-binance-chain
nuls2 =
    nuls2-python @ git+https://github.com/aleph-im/nuls2-python.git
neo =
    neo-python
polkadot =
    substrate-interface>=0.9.27
cosmos =
    cosmospy
docs =
    sphinxcontrib-plantuml
    recommonmark

[options.entry_points]
# Add here console scripts like:
console_scripts =
   pyaleph = aleph.commands:run
# For example:
# console_scripts =
#     fibonacci = pyaleph.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[test]
# py.test options when running `python setup.py test`
# addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# --cov aleph --cov-report term-missing
addopts =
    --disable-pytest-warnings
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests

[aliases]
build = bdist_wheel
release = build upload

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = docs/_build

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 3.1
package = aleph
extensions =
    markdown
